@page "/"
@using VismaTechnicalTask.Services
@using VismaTechnicalTask.Models
@using VismaTechnicalTask.HelperFunctions
@inject IHelperInfoService IHelperInfoService
@inject IAppRecService IAppRecService
@inject IErrorReasonService IErrorReasonService
@inject IHelperInfoService IHelperInfoService
@inject IReceiverService IReceiverService
@inject ISenderService ISenderService
@inject NavigationManager NavManager

<div class="info-container">
    <h4>Information about project</h4>
    <p>This project is for XML file reading, parsing and saving to database. 
        XML files are mail delivery receipts.
    </p>
    <ul>
        <li>
            <NavLink href="success-fail-ratio">Success/fail stats</NavLink> - monthly Success/Fail ratio for Sender
        </li>
        <li>
            <NavLink href="failed-msg-overview">Overview</NavLink> - failed message overview for period
        </li>
        <li>
            <NavLink href="negative-delivery-periods">Negative deliveries</NavLink> - periods of negative delivery receipts received in row

        </li>
    </ul>
</div>

<div class="xml-add-container">
    <p>By clicking on button below, you can update database with all XML receipts, which were created after <span class="bold-accent">@helperInfo.LastAddedXmlDate</span></p>
    <button class="custom-btn" @onclick="() => AddXmls()">XML to DB</button>
</div>

@code {
    HelperInfo helperInfo = new HelperInfo();
    XmlParsing xmlParsing = new XmlParsing();

    protected override async Task OnInitializedAsync()
    {
        helperInfo = await IHelperInfoService.GetLastAddedXmlDate();
    }

    //TODO: jāturpina testēt un jāiepusho githubā 
    public async void AddXmls() {
        XmlParsing xmlParsing = new XmlParsing(IAppRecService, IErrorReasonService, ISenderService, IReceiverService,IHelperInfoService);
        await xmlParsing.ReadFiles(helperInfo.LastAddedXmlDate);
        NavManager.NavigateTo("/", forceLoad: true);
    }
}