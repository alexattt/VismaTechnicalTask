// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VismaTechnicalTask.Data;

namespace VismaTechnicalTask.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220608171511_ErrorModelUpdate")]
    partial class ErrorModelUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VismaTechnicalTask.Models.AppRec", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("GenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MIGversion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MsgType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverID");

                    b.HasIndex("SenderID");

                    b.ToTable("AppRecs");
                });

            modelBuilder.Entity("VismaTechnicalTask.Models.Dept", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Depts");
                });

            modelBuilder.Entity("VismaTechnicalTask.Models.ErrorReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppRecID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Err_DN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Err_OT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Err_S")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Err_V")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppRecID");

                    b.ToTable("ErrorReasons");
                });

            modelBuilder.Entity("VismaTechnicalTask.Models.HCPerson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HcPersons");
                });

            modelBuilder.Entity("VismaTechnicalTask.Models.HelperInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastAddedXmlDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HelperInfo");
                });

            modelBuilder.Entity("VismaTechnicalTask.Models.Receiver", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdrType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HCPersonID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MedSpeciality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAdr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeleAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeptID");

                    b.HasIndex("HCPersonID");

                    b.ToTable("Receivers");
                });

            modelBuilder.Entity("VismaTechnicalTask.Models.Sender", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdrType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HCPersonID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MedSpeciality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAdr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeleAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeptID");

                    b.HasIndex("HCPersonID");

                    b.ToTable("Senders");
                });

            modelBuilder.Entity("VismaTechnicalTask.Models.AppRec", b =>
                {
                    b.HasOne("VismaTechnicalTask.Models.Receiver", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverID");

                    b.HasOne("VismaTechnicalTask.Models.Sender", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderID");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("VismaTechnicalTask.Models.ErrorReason", b =>
                {
                    b.HasOne("VismaTechnicalTask.Models.AppRec", "AppRec")
                        .WithMany()
                        .HasForeignKey("AppRecID");

                    b.Navigation("AppRec");
                });

            modelBuilder.Entity("VismaTechnicalTask.Models.Receiver", b =>
                {
                    b.HasOne("VismaTechnicalTask.Models.Dept", "Dept")
                        .WithMany()
                        .HasForeignKey("DeptID");

                    b.HasOne("VismaTechnicalTask.Models.HCPerson", "HCPerson")
                        .WithMany()
                        .HasForeignKey("HCPersonID");

                    b.Navigation("Dept");

                    b.Navigation("HCPerson");
                });

            modelBuilder.Entity("VismaTechnicalTask.Models.Sender", b =>
                {
                    b.HasOne("VismaTechnicalTask.Models.Dept", "Dept")
                        .WithMany()
                        .HasForeignKey("DeptID");

                    b.HasOne("VismaTechnicalTask.Models.HCPerson", "HCPerson")
                        .WithMany()
                        .HasForeignKey("HCPersonID");

                    b.Navigation("Dept");

                    b.Navigation("HCPerson");
                });
#pragma warning restore 612, 618
        }
    }
}
